"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const errors_1 = require("../errors");
class Relay {
    constructor(url, encoding = 'binary') {
        this.url = url;
        this.encoding = encoding;
    }
    // Can be overridden by mock for testing
    fetch(url, options) {
        return fetch(url, options);
    }
    async send(message) {
        const request = this.encoding === 'json' ? this.jsonRequest(message) : this.binaryRequest(message);
        const response = await this.fetch(this.url, request);
        if (!response.ok)
            throw new errors_1.RequestError(this.url, await response.json());
    }
    jsonRequest(message) {
        return {
            method: 'POST',
            headers: { 'content-type': 'application/json' },
            body: JSON.stringify(message),
        };
    }
    binaryRequest(message) {
        return {
            method: 'POST',
            headers: { 'content-type': 'application/octet-stream' },
            body: message.toBinary(),
        };
    }
}
exports.default = Relay;
//# sourceMappingURL=Relay.js.map