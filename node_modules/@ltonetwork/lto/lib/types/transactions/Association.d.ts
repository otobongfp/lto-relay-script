import Transaction from './Transaction';
import { ISigner, ITxJSON } from '../types';
import Binary from '../Binary';
import { default as DataEntry } from './DataEntry';
export default class Association extends Transaction {
    static readonly TYPE = 16;
    recipient: string;
    associationType: number;
    subject?: Binary;
    expires?: number;
    data: DataEntry[];
    constructor(associationType: number, recipient: string | ISigner, subject?: Uint8Array, expires?: number | Date, data?: Record<string, number | boolean | string | Uint8Array> | DataEntry[]);
    private dataToBinary;
    private toBinaryV1;
    private toBinaryV3;
    private toBinaryV4;
    toBinary(): Uint8Array;
    toJSON(): ITxJSON;
    get dict(): Record<string, number | boolean | string | Binary>;
    static from(data: ITxJSON): Association;
}
