import Transaction from './Transaction';
import { ISigner, ITxJSON } from '../types';
import Binary from '../Binary';
import { default as DataEntry } from './DataEntry';
export default class Statement extends Transaction {
    static readonly TYPE = 23;
    statementType: number;
    recipient?: string;
    subject?: Binary;
    data: DataEntry[];
    constructor(statementType: number, recipient?: string | ISigner, subject?: Uint8Array, data?: Record<string, number | boolean | string | Uint8Array> | DataEntry[]);
    private dataToBinary;
    private toBinaryV3;
    toBinary(): Uint8Array;
    toJSON(): ITxJSON;
    get dict(): Record<string, number | boolean | string | Binary>;
    static from(data: ITxJSON): Statement;
}
