function paddedMessage(message) {
    return `\n${message}\n`;
}
function resolveData(data) {
    if (data instanceof Error)
        return paddedMessage(data.toString());
    if (data === undefined || data === null)
        return '';
    try {
        return paddedMessage(JSON.stringify(data, null, 2));
    }
    catch (e) {
        return paddedMessage('Not possible to retrieve error data');
    }
}
export default class LTOError extends Error {
    constructor(message, data = null) {
        super(`${message}:\n${resolveData(data)}`);
        this.data = data;
    }
}
//# sourceMappingURL=LTOError.js.map